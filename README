Jess Whyte and Andy Foster, 2018
Scripts for floppy intake work at UTL
Feel free to take/adapt/fork/whatever, but please cite/acknowledge, thanks
    

****floppy.py****

FloppyCapture, or floppy.py, is a workflow script to ingest floppy disks (3.5" and 5.25") using a kryoflux two-drive setup, and attached camera. 

note: this is an environment-specific, institution-specific (e.g. calls the UTL catalog) script, but could be modified. For a more generalized version, see floppy-nocall.py.

usage: floppy.py [-h] -l            {ARCH,ART,ASTRO,CHEM,CRIM,DENT,OPIRG,EARTH,EAL,ECSL,FCML,FNH,GERSTEIN,
                                INFORUM,INNIS,KNOX,LAW,MDL,MATH,MC,PONTIF,MUSIC,NEWCOLLEGE,NEWMAN,OISE,PJRC,
                                 PHYSICS,REGIS,RCL,UTL,ROM,MPI,STMIKES,TFRBL,TRIN,UC,UTARMS,UTM,UTSC,VIC}
             -d DIR [-i] -m {3.5,5.25} -c CALL [-k KEY]

arguments:
  -h, --help            show this help message and exit
  -l, --lib {ARCH,ART,ASTRO,CHEM,CRIM,DENT,OPIRG,EARTH,EAL,ECSL,FCML,FNH,GERSTEIN,
            INFORUM,INNIS,KNOX,LAW,MDL,MATH,MC,PONTIF,MUSIC,NEWCOLLEGE,NEWMAN,OISE,PJRC,
            PHYSICS,REGIS,RCL,UTL,ROM,MPI,STMIKES,TFRBL,TRIN,UC,UTARMS,UTM,UTSC,VIC}
                        LibraryID, for a list of library IDs, visit ufot.me/libs
  -d DIR, --dir DIR     Start directory, e.g. /home/jess/FLOPPIES
  -i, --i4              use flag to default to i4/MFM
  -m {3.5,5.25}, --mediatype {3.5,5.25}
                        Use "3.5" or "5.25"
  -c CALL, --call CALL  Call or Collection Number
  -k KEY, --key KEY     Catkey

How floppy.py works: 
-takes some args like media type (e.g. 3.5) and call number, 
-checks projectlog.csv to see if you've already imaged a disk(s) for that call number,
-pulls and displays metadata from json returned from a catalog call, 
-asks if this is the right disk and you want to continue?
-creates disk folder (callNum) under designated library (designated by -l argument)
-prompts for optional label transcription
-prompts for "notes" 
-prompts for photo, takes picture of disk (set-up uses an ipevo doc cam + ffmpeg, we just use it for documentation, 
could be adapted for a different photo setup)
-runs appropriate kryoflux dtc commands (takes stream + MFM if -i argument in place, if no -i argument, 
it will take stream (while trying i4 and i9) and then prompts user for i-type to try), 
-updates disk metadata with info pulled from catalog and disk capture
-updates a master project log

note: Script does not verify 'success' (i.e. if the image is mountable and files can be extracted/performed). 
That process is separate.


****floppy-nocall.py******

floppy-nocall.py is a generalized version of floppy.py (it doesn't attempt to call the UTL catalog or take a photo). 
It's a workflow script to image floppy disks (3.5" and 5.25") using a kryoflux two-drive setup. 

The camera setup is local, you will need to change this or opt-out. 

usage: floppy-nocall.py [-h] -c COLLECTION -d DIR [-i] -m {3.5,5.25}
                        [-t TRANSCRIPT] [-n NOTE] -k KEY

arguments:
  -h, --help            show this help message and exit
  -c COLLECTION, --collection COLLECTION
                        collection/accession/box/whatever
  -d DIR, --dir DIR     Start directory, e.g. /home/jess/CAPTURED
  -i, --i4              use flag to default to i4/MFM
  -m {3.5,5.25}, --mediatype {3.5,5.25}
                        Use "3.5" or "5.25"
  -t TRANSCRIPT, --transcript TRANSCRIPT
                        Transcript of label
  -n NOTE, --note NOTE  capture notes
  -k KEY, --key KEY     diskID


Example command: 
python3 floppy-nocall.py -c Accession-12345 -d /CAPTURED -m 3.5 -t "transcript of the disk label" -n "note: supplementary materials" -k Disk-000123

The following: floppy-nocall -c Coll003 -d /share/floppies -m 3.5 -k 001 , will output: 

/share/floppies/projectlog.csv ← overall projectlog/list of disks (appends) 
/share/floppies/streams/ ← directory for stream files
/share/floppies/Coll003/ ← directory for Coll/Accession
/share/floppies/Coll003/001/ ← directory for individual disk
/share/floppies/Coll003/001/001_capture.log ← kryoflux’s log of capture
/share/floppies/Coll003/001/001_disk.img ← disk.img, can be mounted/files extracted
/share/floppies/Coll003/001/001.jpg ← picture of disk, only if camera is attached and you opt-in at the prompt



How floppy-nocall.py works:
-takes some args like media type (e.g. 3.5), diskID (key), etc.
-checks to see if you've already imaged a disk with that ID(key)
-if exists, asks if you just want to replace the stream/img files (not update the log)
-creates disk directory (key, aka diskID) under designated collection directory
-runs kryoflux dtc commands (takes stream + MFM if -i argument in place, if no -i argument, 
it will take stream (while trying i4 and i9) and then prompts user for i-type to try)
-prompts if you want to update your notes
-updates a master project log.csv (in your -d directory)

*****note: you may want to adjust the kryoflux functions and the dtc command parameters, 
e.g. mine are set to only make 2 tries and limit the log output. 










